{"doc":" The type Meta annotation controller.\n","fields":[],"enumConstants":[],"methods":[{"name":"simpleTest","paramTypes":["java.lang.String"],"doc":" Simple test string.\n\n @param accountId the account id\n @return the string\n"},{"name":"testTopLevelParamAnnotationOverrides","paramTypes":["java.lang.String"],"doc":" When there is a top level {@code @Parameter} annotation it has precedence over the meta-annotation\n So the id parameter should have all the defaults, with a name of \"id\"\n @param accountId the account id\n @return the string\n"},{"name":"testQueryParam","paramTypes":["java.lang.String"],"doc":" Test query param string.\n\n @param accountId the account id\n @return the string\n"},{"name":"testAliasFor","paramTypes":["java.lang.String"],"doc":" {@code @AliasFor} in the {@code @AccountId} annotation allows us to override the default it provides.\n @param accountId the account id\n @return the string\n"},{"name":"testMetaMetaAnnotation","paramTypes":["java.lang.String","java.lang.String"],"doc":" Test meta meta annotation string.\n\n @param queryAccountId the query account id\n @param accountId the account id\n @return the string\n"},{"name":"testAllAttributesAsAlias","paramTypes":["java.lang.String"],"doc":" Test all attributes as alias string.\n\n @param name the name\n @return the string\n"},{"name":"testNoAliasFors","paramTypes":["java.lang.String"],"doc":" Test no alias fors string.\n\n @param name the name\n @return the string\n"}],"constructors":[]}